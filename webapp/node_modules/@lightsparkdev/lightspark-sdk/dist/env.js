import {
  getBitcoinNetworkOrThrow
} from "./chunk-D32EWIPX.js";
import "./chunk-K6SAUSAX.js";
import "./chunk-BMTV3EA2.js";

// src/env.ts
import dotenv from "dotenv";
var RequiredCredentials = /* @__PURE__ */ ((RequiredCredentials2) => {
  RequiredCredentials2["ClientId"] = "LIGHTSPARK_API_TOKEN_CLIENT_ID";
  RequiredCredentials2["ClientSecret"] = "LIGHTSPARK_API_TOKEN_CLIENT_SECRET";
  RequiredCredentials2["BitcoinNetwork"] = "BITCOIN_NETWORK";
  return RequiredCredentials2;
})(RequiredCredentials || {});
var getCredentialsFromEnvOrThrow = () => {
  const env = dotenv.config({
    path: process.env.HOME + "/.lightsparkapienv"
  }).parsed || {};
  const missingTestCredentials = Object.values(RequiredCredentials).filter(
    (cred) => !env[cred]
  );
  if (missingTestCredentials.length) {
    throw new Error(
      `Missing test credentials. Please set ${missingTestCredentials.join(
        ", "
      )} environment variables.`
    );
  }
  const apiTokenClientId = env["LIGHTSPARK_API_TOKEN_CLIENT_ID" /* ClientId */];
  const apiTokenClientSecret = env["LIGHTSPARK_API_TOKEN_CLIENT_SECRET" /* ClientSecret */];
  const bitcoinNetwork = getBitcoinNetworkOrThrow(
    env["BITCOIN_NETWORK" /* BitcoinNetwork */]
  );
  const testNodePassword = "1234!@#$";
  const baseUrl = env["LIGHTSPARK_BASE_URL"] || "api.lightspark.com";
  return {
    apiTokenClientId,
    apiTokenClientSecret,
    bitcoinNetwork,
    testNodePassword,
    baseUrl
  };
};
export {
  RequiredCredentials,
  getCredentialsFromEnvOrThrow
};
