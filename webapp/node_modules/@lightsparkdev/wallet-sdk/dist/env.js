// src/env.ts
import dotenv from "dotenv";
var RequiredCredentials = /* @__PURE__ */ ((RequiredCredentials2) => {
  RequiredCredentials2["AccountId"] = "LIGHTSPARK_ACCOUNT_ID";
  RequiredCredentials2["JwtPrivateKey"] = "LIGHTSPARK_JWT_PRIV_KEY";
  return RequiredCredentials2;
})(RequiredCredentials || {});
var RequiredWalletCredentials = /* @__PURE__ */ ((RequiredWalletCredentials2) => {
  RequiredWalletCredentials2["Jwt"] = "LIGHTSPARK_JWT";
  RequiredWalletCredentials2["WalletPublicKey"] = "LIGHTSPARK_WALLET_PUB_KEY";
  RequiredWalletCredentials2["WalletPrivateKey"] = "LIGHTSPARK_WALLET_PRIV_KEY";
  return RequiredWalletCredentials2;
})(RequiredWalletCredentials || {});
var getCredentialsFromEnvOrThrow = (walletEnvSuffix = ``, requireJwt = true) => {
  const env = dotenv.config({
    path: process.env.HOME + "/.lightsparkenv"
  }).parsed || {};
  const missingCredentials = Object.values(RequiredCredentials).filter(
    (cred) => !env[cred]
  );
  if (missingCredentials.length) {
    throw new Error(
      `Missing credentials. Please set ${missingCredentials.join(
        ", "
      )} environment variables or run \`lightspark-wallet init-env\`.`
    );
  }
  const accountId = env["LIGHTSPARK_ACCOUNT_ID" /* AccountId */];
  const jwtSigningPrivateKey = env["LIGHTSPARK_JWT_PRIV_KEY" /* JwtPrivateKey */];
  if (requireJwt) {
    const missingWalletCredentials = Object.values(
      RequiredWalletCredentials
    ).filter((cred) => !env[getWalletEnvVariable(cred, walletEnvSuffix)]);
    if (missingWalletCredentials.length) {
      throw new Error(
        `Missing wallet credentials. Please set ${missingWalletCredentials.map((cred) => getWalletEnvVariable(cred, walletEnvSuffix)).join(
          ", "
        )} environment variables or run \`lightspark-wallet create-and-init-wallet\` to setup a new wallet.`
      );
    }
  }
  const jwt = env[getWalletEnvVariable("LIGHTSPARK_JWT" /* Jwt */, walletEnvSuffix)];
  const pubKey = env[getWalletEnvVariable(
    "LIGHTSPARK_WALLET_PUB_KEY" /* WalletPublicKey */,
    walletEnvSuffix
  )];
  const privKey = env[getWalletEnvVariable(
    "LIGHTSPARK_WALLET_PRIV_KEY" /* WalletPrivateKey */,
    walletEnvSuffix
  )];
  const baseUrl = env[`LIGHTSPARK_WALLET_BASE_URL`] || `api.lightspark.com`;
  return {
    accountId,
    jwt: jwt || "",
    pubKey,
    privKey,
    baseUrl,
    jwtSigningPrivateKey
  };
};
var getWalletEnvVariable = (walletEnvKey, walletEnvSuffix) => {
  return `${walletEnvKey}${walletEnvSuffix}`;
};
export {
  RequiredCredentials,
  RequiredWalletCredentials,
  getCredentialsFromEnvOrThrow
};
